module mod (
    input wire clk,
    input wire rst,
    input wire start,
    input [31:0] A,
    input [31:0] B,
    output reg [31:0] result,
    output reg done
);

    wire mod_done;

    mod_dp dp (
        .clk(clk),
        .rst(rst),
        .A(A),
        .B(B),
        .result(result),
        .done(mod_done)
    );

    mod_cu cu (
        .clk(clk),
        .rst(rst),
        .start(start),
        .done(done)
    );

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            result <= 32'b0;
            done <= 1'b0;
        end else begin
            if (mod_done) begin
                result <= dp.result;
                done <= cu.done;
            end
        end
    end

endmodule
